!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}({0:function(e,t,n){"use strict";function r(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}n(5),function(){var e=document.querySelector("#orderFrom"),t=e.querySelectorAll("input[required], select[required]"),n=document.querySelector("#buyProduct"),o=document.querySelector("#productImage");e.setAttribute("novalidate",!0),o.addEventListener("click",function(){var e=document.querySelector("#productCount"),t=parseInt(e.textContent,10),n=setInterval(function(){document.getElementById("productCount").innerHTML=t,0===t?clearInterval(n):t--},1e3)}),n.addEventListener("click",function(){e.remove(),c(),u()});var u=function(){var e=document.querySelector("#productCount"),t=parseInt(e.textContent,10);t--,e.innerHTML=t},c=function(){var e=document.querySelector("#summary-conatainer"),t=document.createElement("p");t.classList.add("summaryParagraph"),t.innerText=" DziÄ™kujemy za zakup",e.appendChild(t)};r(t).forEach(function(e){e.addEventListener("input",function(){var t=e.getAttribute("pattern");new RegExp(t).test(e.value)?this.nextElementSibling.classList.add("disable"):this.nextElementSibling.classList.remove("disable")})})}()},5:function(e,t){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,